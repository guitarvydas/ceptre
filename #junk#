qui * stage init -o stage main * main_screen.
stage main = {
do/rest : main_screen -o rest_screen. do/adventure : main_screen -o adventure_screen. do/shop : main_screen -o shop_screen.
do/quit : main_screen -o quit. #interactive main.
stage adventure = {
init : adventure_screen -o spoils z.
}
qui * stage adventure -o stage fight_init * fight_screen.
% drop_amount M N means a monster of size M can drop N coins drop_amount nat nat : bwd.
drop_amount X X. % for now
stage fight_init = {
init : fight_screen -o gen_monster * fight_in_progress. gen_a_monster : gen_monster * monster_size Size
-o monster Size * monster_hp Size. qui * stage fight_init -o stage fight * choice.
try_fight : pred. fight_in_progress : pred. stage fight_auto = {
fight/hit
: try_fight * $fight_in_progress * monster_hp MHP * $weapon_damage D
* subtract MHP D (some MHP’) -o monster_hp MHP’. win
: fight_in_progress * monster_hp MHP * $weapon_damage D * subtract MHP D none -o win_screen.
fight/miss
: try_fight * $fight_in_progress * $monster Size * health HP
* subtract HP Size (some HP’) -o health HP’. die_from_damages
: health z * fight_in_progress -o die_screen. fight/die
: try_fight * fight_in_progress * monster Size * health HP * subtract HP Size none -o die_screen.
}
choice : pred.
qui * stage fight_auto * $fight_in_progress -o stage fight * choice. qui * stage fight_auto * $win_screen -o stage win.
qui * stage fight_auto * $die_screen -o stage die.
}
qui * stage main * qui * stage main * qui * stage main * qui * stage main *
$rest_screen -o stage rest. $shop_screen -o stage shop. $adventure_screen -o stage adventure. quit -o ().