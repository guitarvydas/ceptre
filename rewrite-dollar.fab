DollarRewriter {

top [oneCharOrMacro+] = ‛«oneCharOrMacro»’

oneCharOrMacro_rule [rule] = ‛«rule»’ 
oneCharOrMacro_other [c] = ‛«c»’ 
oneCharOrMacro_space [c] = ‛«c»’ 

ceptreRule [MatchClause klolli ReplacementClause kdot] ‛«resetKeep ()»«resetRetract ()»’ = ‛(rule 
(match
«MatchClause»
)
(retract 
«getRetract ()»
)
(assert
«getKeep ()»«ReplacementClause»
)
)’

ReplacementClause_empty [lb rb] = ‛(predicate empty)’
ReplacementClause_rec [predicate kstar ReplacementClause] = ‛«predicate»\n«ReplacementClause»’
ReplacementClause_bottom [predicate] = ‛«predicate»’
MatchClause_rec [predicate kstar MatchClause] = ‛«predicate»\n«MatchClause»’
MatchClause_bottom [predicate] = ‛«predicate»’

MatchPredicate_dollar [kdollar predicate] = ‛«pushKeep (predicate)»«pushRetract (predicate)»«predicate»’
MatchPredicate_pure [predicate] = ‛«pushRetract (predicate)»«predicate»’
  
Predicate_quiescent [kqui] = ‛(predicate qui) ’
Predicate_stage [kstage name] = ‛(stage «name») ’
Predicate_predWithArgs [name Args+] = ‛(predicate «name» «Args»)’
Predicate_predNoArgs [name] = ‛(predicate «name»)’
name [nameFirst nameRest*] = ‛«nameFirst»«nameRest»’
nameFirst [c] = ‛«c»’
nameRest_alnum [c] = ‛«c»’
nameRest_underscore [c] = ‛«c»’
nameRest_slash [c] = ‛«c»’
nameRest_squote [c] = ‛«c»’
nameRest_equote [c] = ‛«c»’

Arg [a] = ‛«a» ’
logicVariable_dontcare [k] = ‛_’
logicVariable_named [cap rest*] = ‛«cap»«rest» ’
symbol [s] = ‛«s» ’
number [digits+] = ‛«digits» ’

parenthesizedExpr [lp e* rp] = ‛«lp»«e»«rp»’
estuff_rec [lp e* rp] = ‛«lp»«e»«rp»’
estuff_bottom [c] = ‛«c»’

}

