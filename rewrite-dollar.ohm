DollarRewriter {

top = oneCharOrMacro+

oneCharOrMacro =
  | space -- space
  | ceptreRule -- rule
  | any -- other

ceptreRule = applySyntactic<MatchClause> "-o" applySyntactic<ReplacementClause> "."

ReplacementClause =
  | "(" ")" -- empty
  | Predicate "*" ReplacementClause -- rec
  | Predicate -- bottom

MatchClause = 
  | MatchPredicate "*" MatchClause -- rec
  | MatchPredicate -- bottom

MatchPredicate =
  | "$" Predicate -- dollar
  | Predicate -- pure

Predicate =
  | "qui" ~nameRest -- quiescent
  | "stage" ~nameRest name -- stage
  | name Arg+ -- predWithArgs
  | name -- predNoArgs

name = nameFirst nameRest*
nameFirst = letter
nameRest = 
  | alnum -- alnum
  | "_" -- underscore
  | "/" -- slash
  | "'" -- squote
  | "â€™" -- equote

Arg =
  | parenthesizedExpr
  | logicVariable
  | number
  | symbol
  
logicVariable =
  | "_" ~nameRest   -- dontcare
  | upper nameRest* -- named

parenthesizedExpr = "(" estuff* ")"
estuff =
  | "(" estuff* ")" -- rec
  | ~"(" ~")" any -- bottom

symbol = name
number = digit+

}

