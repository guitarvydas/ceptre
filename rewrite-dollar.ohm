DollarRewriter {

top = oneCharOrMacro+

oneCharOrMacro =
  | space -- space
  | ceptreRule -- rule
  | any -- other

ceptreRule = applySyntactic<MatchClause> "-o" applySyntactic<ReplacementClause> "."

ReplacementClause =
  | Predicate "*" ReplacementClause -- rec
  | Predicate -- bottom

MatchClause = 
  | MatchPredicate "*" MatchClause -- rec
  | MatchPredicate -- bottom

MatchPredicate =
  | "$" Predicate -- dollar
  | Predicate -- pure

Predicate =
  | "qui" -- quiescent
  | "stage" name -- stage
  | name Arg+ -- predWithArgs
  | name -- predNoArgs

name = nameFirst nameRest*
nameFirst = letter
nameRest = alnum | "_" | "/" | "'" | "â€™"

Arg =
  | logicVariable
  | number
  | symbol
  
logicVariable =
  | "_" ~nameRest   -- dontcare
  | upper nameRest* -- named

symbol = name
number = digit+

}

